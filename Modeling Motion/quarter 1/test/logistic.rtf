{\rtf1\ansi\ansicpg1252\deff0\uc1{\fonttbl{\f0\fcharset0 Times New Roman;}}{\colortbl
;}{\stylesheet{\s0\nowidctlpar\nooverflow\sl240\slmult1\f0\fs20\kerning28 Normal
;}}\paperw12240\paperh15840\margt1440\margl1800\margr1800\margb1440\deftab720\pgnstart1
\viewkind1\viewscale100\fet0\pard\plain\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28
{\header\pard\nowidctlpar\nooverflow\sl240\slmult1\tqc\tx4320\tqr\tx8640\par}\headery720
{\footer\pard\nowidctlpar\nooverflow\sl240\slmult1\tqc\tx4320\tqr\tx8640\par}\footery864
from math import *\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 from visual
.graph import *\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 a=1\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 class LogisticEquation
:\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28     def _
init__(self,k,C,initialvalue):\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         self
.initialvalue = initial\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         self
.k = k\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         self
.C = C\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28     def evaluate
(self,t=0):\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         \par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28     def drawgraph
(self,tfinal,dt=.1):\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28     \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         self
.dt = dt\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         self
.tfinal = tfinal\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         t
=0\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         '
graph'+str(a) = gdisplay(x=0, y=0, width=600, height=600, \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28           
title='Logistic Equation', xtitle='t', ytitle='y',\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28           
xmax=tfinal, xmin=0., ymax=300, ymin=0)\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         line
 = gcurve(color=color.red)\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         while
 t<=tfinal:\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28             
P = x\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28             
DP = \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28             
t = t+dt\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         a
 = a+1  #this is so when the next graph is made it will create a new window with
 a new name\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28         \par
}

}